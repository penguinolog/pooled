parameters:
  name: ""
  python: ""
  architecture: "x64"
  kind: "native"

jobs:
- job: ${{ format('{0}_{1}_{2}', parameters.name, parameters.architecture, parameters.kind) }}
  dependsOn:
  - PyLint
  - MyPy
  - PEP8
  pool:
    vmImage: "vs2017-win2016"

  steps:
  # ensure the required Python versions are available
  - task: UsePythonVersion@0
    displayName: setup python
    inputs:
      versionSpec: ${{ parameters.python }}
      architecture: ${{ parameters.architecture }}

  - script: "python -c \"import sys; print(sys.version); print(sys.executable)\""
    displayName: show python information

  - script: |
      python -m pip install --upgrade pip
      pip install -U setuptools
    displayName: upgrade pip and setuptools

  - script: |
      pip install -r requirements.txt
    displayName: Install dependencies

  - ${{ if eq(parameters.kind, 'cython') }}:
    - script: |
        pip install -r build_requirements.txt
      displayName: Install build requirements

  - script: |
      pip install -U wheel
      python setup.py develop -v
    displayName: Build and install

  - script: |
      pip install pytest pytest-sugar pytest-cov

      pytest -vvv --junitxml=unit_result.xml --cov=threaded --cov-report=xml --cov-report=html --cov-report term test
    displayName: PyTest

  - task: PublishTestResults@2
    displayName: publish test results via junit
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: ${{ format('$(System.DefaultWorkingDirectory)/unit_result.xml') }}
      testRunTitle: ${{ format('{0}_{1}_{2}', parameters.name, parameters.architecture, parameters.kind) }}

  - ${{ if ne(parameters.kind, 'cython') }}:
    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: ${{ format('$(System.DefaultWorkingDirectory)/coverage.xml') }}
        reportDirectory: ${{ format('$(System.DefaultWorkingDirectory)/htmlcov') }}
