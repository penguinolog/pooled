language: python
os: linux
dist: bionic

install:
  - &upgrade_python_toolset pip install --upgrade pip setuptools wheel
  - &install_test_deps pip install --upgrade -r pytest_requirements.txt
  - &install_deps pip install -r CI_REQUIREMENTS.txt
  - pip install --upgrade coveralls

_python:
  - &python36
    name: "Python 3.6"
    python: "3.6"
  - &python37
    name: "Python 3.7"
    python: "3.7"
  - &python38
    name: "Python 3.8"
    python: "3.8"
  - &python39
    name: "Python 3.9"
    python: "3.9"

_helpers:
  - &install_cython pip install --upgrade Cython
  - &build_package python setup.py bdist_wheel clean
  - &install_built pip install threaded --no-index -f dist
  - &test_no_cov  py.test -vvv test
  - &test_cythonized
    stage: Test cythonized
    install:
      - *upgrade_python_toolset
      - *install_test_deps
      - *install_deps
      - *install_cython
    script:
      - *build_package
      - *install_built
      - *test_no_cov

  - &static_analysis
    stage: Static analysis
    <<: *python38

  - &code_style_check
    stage: Code style check
    <<: *python38

  - &deploy
    <<: *python38
    if: tag IS present
    services:
    - docker
    install:
      - *upgrade_python_toolset
      - *install_deps
      - pip install -U --upgrade-strategy=eager --no-cache-dir twine
    before_deploy:
      - *build_package
    deploy:
      - provider: pypi
        # `skip_cleanup: true` is required to preserve binary wheels, built
        # inside of manylinux* docker container during `script` step above.
        cleanup: false
        skip_cleanup: true
        username: penguinolog
        password:
          secure: "h1gXulNJxdjdUtPXDwUf/2MltjjiTy/cSsv+67Bxr9PAXSo9s0ynnhijKavE0QlKPr0NDJcEcl79dEN3gx1rkbAFZ+YRJfx0KHy26ImNAIx+npOFjGko87KhMNkrE3QBn9carWNnjYA4rCuUqbv/Znk9xixleE/sHJbKnkkTrerSI2jkznMa6h0FNVCEPzFesHmll7rBy4CjFkRcWNX8nfKNIV9rHFI7mXm8+jzl0msOnkEcKRqAk+MUwVjcD9XtpF42uA0nQTtqjWFdwSUxxBJKMyrkkI0o8Uk06EewkgJGwjGpvn+EUm1hBpjGrXUQQJyr20SZdC0CqaqXD/axISAtQPzP5I4Ey3VkLDV4mZuQjeNlbRbTH0Q7af+CpnOpFtYobIs1/HjB5wztazegT8uk4ZU/GheYqknXmtg9Ga8NV47sIpLC/hTLXWP+O/k0JKRYP9CgjTml2nLykNjZy4KRnlCUerYH8d4bNz687ElXU2bLtlBxyigUc9oo31DvNG+vB2axOp8wGiRTEpfBVPEF6EYUj+qSbX4ep4o/mWp+ax5YlLVYVoXkXpNecIggICAChIkqEl9MtGzTu31s3sBKpk9WuqoyHG80TDo2Tet6zWYx3itUx9M0SLkrML9Hs5WKsXDZE6jZrVHtx8lWuuZZl5JQkXYtd358lwJmEBM="
        on:
          tags: true
        distributions: sdist
        upload_docs: false
        skip_existing: true

script:
  - python setup.py develop -v
  - py.test --cov-config .coveragerc --cov-report= --cov=threaded test
  - coverage report -m --fail-under 87

jobs:
  include:
    - <<: *static_analysis
      name: "PyLint"
      install:
        - *upgrade_python_toolset
        - *install_deps
        - pip install --upgrade "pylint >= 2.6.0"
      script:
        - python setup.py develop -v clean
        - python setup.py --version clean
        - pylint threaded
    - <<: *static_analysis
      name: "Bandit"
      install:
        - *upgrade_python_toolset
        - pip install --upgrade bandit
      script:
        - bandit -r threaded
    - <<: *static_analysis
      name: "MyPy"
      install:
        - *upgrade_python_toolset
        - *install_deps
        - pip install --upgrade "mypy >= 0.720"
      script:
        - python setup.py --version clean
        - mypy --strict threaded
    - <<: *static_analysis
      name: "PEP8"
      install:
        - *upgrade_python_toolset
        - pip install --upgrade -r flake8_requirements.txt
      script:
        - flake8 threaded

    #  - <<: *code_style_check
    #    name: "PEP257"
    #    install:
    #    - *upgrade_python_toolset
    #    - pip install --upgrade pydocstyle
    #    script:
    #    - pydocstyle threaded
    - <<: *code_style_check
      name: "Black formatting"
      install:
        - *upgrade_python_toolset
        - pip install --upgrade black
      script:
        - black --check threaded

    - stage: test
      <<: *python36
      after_success:
        - coveralls
    - stage: test
      <<: *python37
      after_success:
        - coveralls
    - stage: test
      <<: *python38
      after_success:
        - coveralls
    - stage: test
      <<: *python39
      after_success:
        - coveralls

    - <<: *test_cythonized
      <<: *python36
    - <<: *test_cythonized
      <<: *python37
    - <<: *test_cythonized
      <<: *python38
    - <<: *test_cythonized
      <<: *python39

    - stage: deploy
      # This prevents job from appearing in test plan unless commit is tagged:
      <<: *deploy
      name: Build universal and cythonized bdist_wheel. Deploy bdist and sdist.
      script:
        - ./tools/run_docker.sh "threaded"

    - stage: deploy
      # This prevents job from appearing in test plan unless commit is tagged:
      <<: *deploy
      name: Build universal and cythonized for i686 bdist_wheel. Deploy bdist.
      script:
        - ./tools/run_docker_manylinux2014.sh "threaded" "i686"

    - stage: deploy
      # This prevents job from appearing in test plan unless commit is tagged:
      <<: *deploy
      name: Build universal and cythonized for x86_64 bdist_wheel. Deploy bdist.
      script:
        - ./tools/run_docker_manylinux2014.sh "threaded" "x86_64"

    - stage: deploy
      # This prevents job from appearing in test plan unless commit is tagged:
      <<: *deploy
      name: Build universal and cythonized for aarch64 bdist_wheel. Deploy bdist.
      arch: arm64
      script:
        - ./tools/run_docker_manylinux2014.sh "threaded" "aarch64"

cache: pip
before_cache:
  - rm -f $HOME/.cache/pip/log/debug.log
